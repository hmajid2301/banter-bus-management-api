image: python:3.9.8

variables:
  PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
  PIP_DOWNLOAD_DIR: ".pip"
  DOCKER_DRIVER: overlay2

cache:
  key: "${CI_JOB_NAME}"
  paths:
    - .cache/pip
    - .venv

.mongo:
  services:
    - mongo:4.4.4
  variables:
    MONGO_INITDB_ROOT_USERNAME: banterbus
    MONGO_INITDB_ROOT_PASSWORD: banterbus
    MONGO_INITDB_DATABASE: test
    BANTER_BUS_MANAGEMENT_API_DB_USERNAME: banterbus
    BANTER_BUS_MANAGEMENT_API_DB_PASSWORD: banterbus
    BANTER_BUS_MANAGEMENT_API_DB_HOST: mongo
    BANTER_BUS_MANAGEMENT_API_DB_NAME: test

services:
  - docker:dind

stages:
  - pre
  - test

before_script:
  - pip download --dest=${PIP_DOWNLOAD_DIR} poetry
  - pip install --find-links=${PIP_DOWNLOAD_DIR} poetry
  - poetry config virtualenvs.in-project true
  - poetry install -vv

publish-docker:test:
  stage: pre
  only:
    - main
  image: docker
  services:
    - docker:dind
  before_script: []
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -f Dockerfile -t ${CI_REGISTRY_IMAGE}:test --target production .
    - docker push ${CI_REGISTRY_IMAGE}:test

publish-docker:seed:
  stage: pre
  image: docker
  only:
    - main
  services:
    - docker:dind
  before_script: []
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -f db/Dockerfile -t ${CI_REGISTRY_IMAGE}/database-seed .
    - docker push ${CI_REGISTRY_IMAGE}/database-seed

test:lint:
  stage: test
  only:
    - merge_request
  script:
    - make lint

test:unit-tests:
  stage: test
  only:
    - merge_request
  script:
    - make unit_tests

test:coverage:
  stage: test
  only:
    - main
    - merge_request
  extends:
    - .mongo
  script:
    - cp .env.test .env
    - make coverage
  coverage: '/^TOTAL.+?(\S+\%)$/'
  artifacts:
    when: always
    reports:
      junit: report.xml
      cobertura: coverage.xml

test:integration-tests:
  stage: test
  only:
    - merge_request
  extends:
    - .mongo
  script:
    - cp .env.test .env
    - make integration_tests
